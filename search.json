[{"title":"Hello World","date":"2023-03-30T03:18:43.181Z","url":"/2023/03/30/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"},{"title":"课程设计（图像识别）","date":"2021-06-21T16:00:00.000Z","url":"/2021/06/22/%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%EF%BC%88%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%EF%BC%89/","tags":[["学习分享","/tags/%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB/"],["python","/tags/python/"],["图像识别","/tags/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/"],["课程设计","/tags/%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"]],"categories":[["学习分享","/categories/%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB/"]],"content":"↓↓点击先偷偷观看最终效果↓↓ 一、前言为了能够快速学习python语言，我大概花了几周的时间在自学这本《python编程从入门到实践》😵 《python编程从入门到实践》 菜鸟就是菜鸟，总是要比别人多看几遍才能理解得透彻，因此我英语课上看，概率论课上也看😨，才微微的把python的基础法语弄明白了，一边学习顺便把一些些基础知识记录进我的”菜鸟”小本本菜菜的Python笔记毕竟菜鸟总要学着自己长大👶 把Python的一些基础知识学完后，恰逢到要做一个面向对象的课程设计，而老师也允许使用Python语言进行设计，就当把这次课程设计当做Python的一次实战，一次锻炼的机会😁（真的是锻炼，折磨我好几个夜晚了🌜，黑眼圈🌚有了，痘痘也冒出了好几个😭，不过真的学到了好多） 起初没有想着要做图像识别，是想做一个从图片从提取文字，发现一个Python-tesseract工具，只需要简短的代码就能够提取图片中的文字了，但是这个东西需要自行安装，还需要下载一个Tesseract-OCR应用程序，安装完后还需要修改源码中的路径，不知道是怎的，可能路径我没弄好，在使用这个工具的时候，运行后一直出现错误，提示我没有这个应用程序，之后我挣扎了许久，路径修改来修改去，突然可以运行了，可是这个工具不自带有中文字体库，我第一次使用来提取中文字体时，运行出来的结果都是一堆的问号❓，这可把我整懵了，于是又一直查资料，终于找到了解决方法，也顺利安装了中文字体库chi_sim.traineddata，在提取中文字体时，也顺利提取出，但是当图片是中英文结合时，效果就不是那么理想了，而且若文字是有很多段很多行，提取出的所有文字都只显示在一行上🤣，若是效果理想，可是只是使用到了几行代码，还是借用的工具，我根本没学到什么东西，于是决定尝试另一种方向。 直到我发现了一个东西，也就是一个图像识别的界面，它的界面是这样子的： 参考界面 于是我就在想，我是不是也可以自己写这样的一个界面🤨，让用户自行选择识别类型，自行上传想要识别的图片，上传后界面就会显示出识别后的信息😬然而写出这个界面的主人并没有把它的完整代码放出来，只是放了一部分，毕竟这也是别人的知识产权，不可能全都拿出来公开展示，于是那个代码我运行之后运行框一堆红色的错误，我修修补补之后运行成功了可是窗口总是会中途卡退，也许是存在逻辑错误或者是其它问题，我也不太清楚🙉，而且代码有点乱让我不懂哪里是哪里 于是我决定自己一人从 0 开始，也是那个参考界面给了我很多的想法 我把我所想的和要实现的功能列出来： 程序运行后弹出一个窗口 用户先选择图片，选择图片后显示出图片和图片路径 选择图片后，界面显示出选择识别类型的组合框；若未选择图片，界面是不会显示出识别类型的组合框 若用户选择好识别类型后，界面显示出识别的信息 把要实现的功能大概的罗列出来后，我就开始起步🚶‍♂️了，只能说祝我好运吧🙏🙏🙏 二、起步 为了能够在过程中找出是哪一个步骤哪一个功能的实现出现的问题，于是我采取把每一个功能先单独写出来，也就是每一个功能单独写一个Python文件，一个个测试，等到所有的功能都没有问题，我再把它们组合在同一个文件中。 弹出的新窗口对于弹出的新窗口的实现，我采用的是Python-Tkinter， 弹出的新窗口 选择图片与显示图片和图片路径 组合框 组合框 好像这三个功能单独写的时候感觉没啥问题，都可以运行成功，只是界面不太美观（当然界面的美化可以等所有的功能全都写好后再进行优化），当我尝试着先将这三个功能合并在一个界面时，question来了😩 由于点击打开图片后，需要显示组合框，然而这个组合框一直不出现，我退出程序后，运行框提醒我_tkinter.TclError: NULL main window，英语不太好的我看到这个的第一反应就是缺乏主窗口虽然知道错误是什么，然而第一次使用Python-Tkinter的我显然还是不知道该怎么解决这个question🥺，于是疯狂找资料，找它的使用方法，可是网上给出的也都是每个功能单独在一个窗口的使用方法，而我是想搞的是一个窗口含有多个功能界面，这就让我头大了…. 第一次尝试遇到问题是正常(离谱)不过了….即使是这样我也是不会轻易放弃的（才怪）我努力挣扎了两天（然而没什么用）发现还有另一个python的模块可以写窗口，那就是无敌超神的PyQt✌✌✌为什么❓无敌超神❓能让我瞬间抛下Python-Tkinter，让我下面细说🤣🤣🤣 三、转战QT这东西厉害就是有特定的QMainWindow创建主窗口，还可以在主窗口中建立更多的界面 QtWidgets，通过给各个控件设置各自的对象名(self.setObjectName(&quot;对象名&quot;))，还能使用qss文件给控件进行美化😎😎😎，例如： qss的语法类似于css的语法，然而css的用法我在上学期学了一些基础用法，所以qss对于我而言还是挺好理解的，顺便记录了一点此次完成的图像识别需要用到的QT的用法Pyqt的用法，还有如何使用Qss修饰QtQss修饰Qt的用法 结合Qt的使用方法，我重新把我的想法和实现的功能改了一遍 程序运行后弹出一个窗口 用户自行选择识别类型（若不选择，默认是组合框的第一个识别类型） 用户自行选择识别的图片 若用户已经选择图片，界面显示图片的路径，并显示已选择的图片，点击确定按钮则界面显示出识别信息 若用户未选择图片就点击确定按钮，则弹出新窗口提醒用户先选择图片 初步效果 初步效果 （小声逼逼）界面确实是丑，因为还没有放上qss文件，界面的↓↓美化后的最终效果↓↓要留到最后一步，关键的还是各个功能的实现，让我下面细说 四、功能的实现1、主窗口界面的实现main.py文件 查看代码的gitee地址请点击 -&gt; main.py 点击查看main.py文件代码 2、识别类型的方法function.py文件 查看代码的gitee地址请点击 -&gt; function.py 点击查看function.py文件代码 3、发送请求本项目联合使用百度AI平台实现图像识别通过调用接口，返回识别结果 百度AI图像识别API参考 request.py文件 查看代码的gitee地址请点击 -&gt; request.py 点击查看request.py文件代码 五、界面的美化界面的美化使用qss语法 style.qss文件 查看代码的gitee地址请点击 -&gt; style.qss 点击查看qss.style文件代码 课程设计中用到的图片地址 - &gt; 图片 最终效果 注：若以上视频无法播放或卡顿 请点击以查看最终效果 -&gt; 视频演示最终效果 项目总的源代码地址 ↑↑点击返回开头↑↑"},{"title":"Qss修饰Qt","date":"2021-06-18T16:00:00.000Z","url":"/2021/06/19/QSS%E4%BF%AE%E9%A5%B0Qt/","tags":[["学习笔记","/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"],["Qss","/tags/Qss/"],["pyqt","/tags/pyqt/"]],"categories":[["学习笔记","/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"]],"content":"一、Qss实时编译器QSS Editor是用于编辑和实时预览Qt样式表的工具，下载地址为如下: QSS Editor下载 二、在python中使用Qss修饰QT2.1 读取Qss文件： 2.2 创建按钮，并设置属性名（.py文件）： 2.3 .qss文件： 三、Qss的基本属性3.1 背景属性（Background） 属性 描述 background 在一个声明中设置所有的背景属性。 background-attachment 设置背景图像是否固定或者随着页面的其余部分滚动。 background-color 设置元素的背景颜色。 background-image 设置元素的背景图像。 background-position 设置背景图像的开始位置。 background-repeat 设置是否及如何重复背景图像。 background-clip 规定背景的绘制区域。 background-origin 规定背景图片的定位区域。 background-size 规定背景图片的尺寸。 ###3.2 控制大小 min-width和min-height两个属性可以用来指定一个部件的内容区域的最小大小，这两个值将影响部件的minimumSizeHint() 如果该属性没有被指定，最小大小将从部件的内容区域和当前样式中继承 3.3 处理伪类状态 伪状态列表 伪状态 描述 checked button部件被选中 disabled 部件被禁用 enabled 部件被启用 focus 部件获得焦点 hover 鼠标位于部件上 indeterminate checkbox或radiobutton被部分选中 off 部件可以切换，且处于off状态 on 部件可以切换，且处于on状态 pressed 部件被鼠标按下 unchecked button部件未被选中 组合框样式举例： "},{"title":"pyqt使用方法","date":"2021-06-17T16:00:00.000Z","url":"/2021/06/18/pyqt%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","tags":[["学习分享","/tags/%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB/"],["pyqt","/tags/pyqt/"],["python","/tags/python/"]],"categories":[["学习分享","/categories/%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB/"]],"content":"QT 官方文档, 一、基本功能1.1、建立简单的窗口 app = QApplication(sys.argv):每个PyQt5应用都必须创建一个应用对象。sys.argv是一组命令行参数的列表。Python可以在shell里运行，这个参数提供对脚本控制的功能。w = QWidget():QWidge控件是一个用户界面的基本控件，它提供了基本的应用构造器。默认情况下，构造器是没有父级的，没有父级的构造器被称为窗口（window）w.resize(250, 150):resize()方法能改变控件的大小，这里的意思是窗口宽250px，高150pxw.move(300, 300):move()是修改控件位置的的方法。它把控件放置到屏幕坐标的(300, 300)的位置。注：屏幕坐标系的原点是屏幕的左上角w.setGeometry(300, 300, 300, 220):把窗口放到屏幕上并且设置窗口大小。参数分别代表屏幕坐标的x、y和窗口大小的宽、高（是resize和move的集合体）w.setWindowTitle(&#39;Simple&#39;):给窗口添加了一个标题，标题在标题栏展示w.show():show()能让控件在桌面上显示出来。控件在内存里创建，之后才能在显示器上显示出来sys.exit(app.exec_()):当调用exit()方法或直接销毁主控件时，主循环就会结束。sys.exit()方法能确保主循环安全退出 1.2、控件1.2.1、按钮创建按钮：第一个参数是按钮的文本，第二个参数是按钮的父级组件： qbtn = QPushButton(&#39;按钮&#39;, self)按钮绑定事件： qbtn.clicked.connect(function)给按钮添加提示语：QToolTip.setFont(QFont(&#39;SansSerif&#39;, 10))qbtn.setToolTip(&#39;This is a &lt;b&gt;QPushButton&lt;/b&gt; widget&#39;) QPushButton 按钮控件, 1.2.2、图像控件 QPixmap创建一个QPixmap 对象，它将传入的文件名作为参数:pixmap = QPixmap(&quot;icon.png&quot;)将pixmap放到QLabel控件中:lbl = QLabel(self)lbl.setPixmap(pixmap) 1.2.3、文本框 QLineEdit创建一个QLineEdit对象：qle = QLineEdit(self) 文本的设置与获取 API 含义 setText() 插入文本 text() 获取文本内容 displayText() 获取文本显示的内容 显示模式 API 含义 setEchoMode(QLineEdit_EchoMode) 设置显示模式 echoMode() 获取文本框输入模式 QLineEdit_EchoMode 含义 Normal 普通模式，显示输入的值 NoEcho 不输出 Password 密文显示，显示都是星号 PasswordEchoOnEdit 输入时候显示，结束后密文 输入限制 相关API 含义 setMaxLength(int) 这是最大长度 maxLength() 获取最长度 setReadOnly(bool) 设置只读 isReadOnly() 获取是否只读 setValidator(QValidator) 设置验证器 setInputMask(mask_str) 掩码验证 hasAcceptableInput() 文本是否通过验证 文本框的编辑状态 相关API 含义 isModified(bool) 是否被编辑 setModified() 设置编辑状态 QLineEdit 单行文本输入, 二、布局管理2.1、水平布局水平对齐 水平居中对齐 水平两端对齐 布局对齐方式 参数 描述 QtCore.Qt.AlignLeft 水平方向居左对齐 QtCore.Qt.AlignRight 水平方向居右对齐 QtCore.Qt.AlignCenter 水平方向居中对齐 QtCore.Qt.AlignJustify 水平方向两端对齐 QtCore.Qt.AlignTop 垂直方向靠上对齐 QtCore.Qt.AlignBottom 垂直方向靠下对齐 QtCore.Qt.AlignVCenter 垂直方向居中对齐 2.2、垂直布局垂直对齐 垂直顶部对齐 垂直底部对齐 垂直居中对齐 垂直两端对齐 增加两个控件的距离（两个按钮之间的距离）： QT 布局管理, 三、对话框常用方法 方法 描述 information(QWidget parent,title,text,buttons,defaultButton) 弹出消息对话框，参数解释：parent（指定的父窗口控件），title（对话框标题），text（对话框文本），buttons（多个标准按钮，默认设为OK按钮），defaultButton（默认选中的标准按钮，默认是第一个标准按钮） question(QWidget parent,title,text,buttons,defaultButton) 弹出问答对话框 warning(QWidget parent,title,text,buttons,defaultButton) 弹出警告对话框 critical(QWidget parent,title,text,buttons,defaultButton) 弹出严重错误对话框 about(QWidget parent,title,text) 弹出关于对话框 setTitle() 设置标题 setText() 设置消息正文 setIcon() 设置弹出对话框的图片 标准按钮类型 类型 描述 QMessage.OK 同意操作 QMessage.Cancel 取消操作 QMessage.Yes 同意操作 QMessage.No 取消操作 QMessage.Abort 终止操作 QMessage.Retry 重试操作 QMessage.Ignore 忽略操作 创建对话框：reply = QMessageBox.information(self,&quot;消息对话框&quot;,&quot;消息对话框正文&quot;,QMessageBox.Yes | QMessageBox.No,QMessageBox.Yes) 例如：点击关闭窗口后提示”是否要退出程序” QMessageBox弹出式对话框, 3.1、文件选择对话框例如：选择图片 3.2、消息对话框 3.3、消息提问框 3.4、警告对话框 3.5、严重错误对话框 3.6、关于对话框"},{"title":"菜菜的Python笔记","date":"2021-06-16T16:00:00.000Z","url":"/2021/06/17/%E8%8F%9C%E8%8F%9C%E7%9A%84Python%E7%AC%94%E8%AE%B0/","tags":[["学习分享","/tags/%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB/"],["python","/tags/python/"]],"categories":[["学习分享","/categories/%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB/"]],"content":"Hello大家好，这里是菜菜的Python笔记📖 初出茅庐的我👶，虽然还啥也不是🤣 但是只要坚持学习🧐，也总会等到成为\"大佬\"的那一天🙈 菜菜学习开始学习Python的第一本书 《Python编程从入门到实践》, 菜菜的Python笔记1. 字符串单词变换大小写 name = &quot;Hello Ada,would you like to learn some Python today&quot; 单词的首字母变大写：name.title()运行结果：Hello Ada,Would You Like To Learn Some Python Today 单词的字母全变小写：name.lower()运行结果：hello ada,would you like to learn some python today 单词的字母全变大写：name.upper()运行结果：HELLO ADA,WOULD YOU LIKE TO LEARN SOME PYTHON TODAY 字符中使用变量 name = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]print(f&quot;It is &#123;name[0]&#125; &#123;name[1]&#125; &quot;)运行结果：It is a b 剔除左右两边的空白 name = &quot; Ada &quot; 删除左边空白：print(name.lstrip())运行结果：Ada 删除右边空白：print(name.rstrip())运行结果：&amp;nbsp;&amp;nbsp;&amp;nbsp;Ada 删除两边的空白：print(name.strip())运行结果：Ada 2. 数数太大用下划线区分：number=12_000_000_000 给多个变量赋值：x,y,z=1,2,3 3. 列表1、末尾加元素：name.append(&#39;a&#39;) 2、在列表中加元素：name.insert(1,&#39;a&#39;) 3、删除元素：del name[0] 4、删除末尾元素：del name[-1]或name.pop() 5、弹出列表中懂得任意一个位置的元素：name1=name.pop(1) 6、根据值删除元素：name.remove(&#39;a&#39;) 注：只删除第一个指定的值，若出现多次，需要使用循环 7、排序sort： name.sort() 永久排序，按字母排序排列 name.sort(reverse=True) 永久排序，按字母反序排列 sorted(name) 临时排序 name.reverse() 按列表反序排列 8、列表的长度：len(name) 9、索引-1总是指向最后一个元素：name[-1] 操作列表 1、遍历：for i in name 2、创建数值列表：for i in range(1,11) 注：输出1~10的数 输出的偶数：for i in range(2,11,2) 3、统计计算 最小值：min(name) 最大值：max(name) 求和：sum(name) 4、切片⭐ name[0:3] 返回索引0,1,2的元素 name[2:] 从索引2到结尾 name[:4] 从开头到索引3 name[0:10:2] 每隔2个元素提取一个元素 5、复制列表 把副本赋值为变量：name1=name[:] 两个变量同时指向一个列表：name1=name 4. 元组概念元组也是一种序列。元组使用括弧“0”来界定，元组中各元素之间用逗号隔开。元组不支持修改或删除其所包含的元素。如果要修改，则可以使用list函数把它转化成列表。 1、创建元组 使用括弧“()”来创建，例如，a=(1，2，3) 使用逗号来创建，例如 b=2,4 使用 tuple0函数把其他种类的序列转化为元组，例如 c= tuple(&quot;Good!&quot;) 5. 语句1、语句 for i in j: if i&gt;j : print(i) else: print(j) 2、逻辑与and，逻辑或or 3、if-elif-else结构 6. 字典 word=&#123;&#39;name&#39;=&#39;Ada&#39;,&#39;age&#39;=18&#125; 1、值 键对值：’name’为一个键，关联值为’Ada’ 修改值：word[&#39;name&#39;]=&#39;Bda 删除值：del word[&#39;name&#39;] 2、get提示信息 word1=word.get(&#39;num&#39;,&#39;no num value assigned&#39;) print(word1) 若有num键则输出关联值，无num键则输出提示信息，不使用get方法，当无num键时，程序会报错 3、遍历 for key,value in word.items(): print(f”{key}:{value}) 遍历键：for i in word.keys() 遍历值：for i in word.values() 4、set提取元素 当有重复元素时，set用于提取独一无二的元素 for i in set(word.values()) 7. 函数1、 函数定义 def 函数名(形参1,形参2,...) 2、主函数 3、*元组名 将实参封装在一个元组中 （这个还不太懂，以后遇到再仔细学习）🤣 8. 类1、定义 class 类名: 2、初始化 def__init__(参数): 3、类内函数 def func(self,m): &#x2F;&#x2F;self相当于一个类 self.name&#x3D;m 继承 实例作为属性： 导入模块中的类 from module_name import * 导入模块中的所有类别名：from box import Box as B 9. 文件1、读取文件 2、写入文件 3、给文件增加内容（不是覆盖） 以附加模式打开文件，’a’ 4、存储文件（使用json格式文件） json.dump(要存储的数据,存储数据的文件对象) 使用json.load()将列表读取到内存中： 10. 测试1、断言方法 命令 含义 assertEqual(a,b) a&#x3D;&#x3D;b assertNotEqual(a,b) a!&#x3D;b assertTrue(x) x为True asserFalse(x) x为False assertIn(item,list) item在list中 assertNotIn*item,list) item不在list中 ↑↑(´▽ƪʃ♡)点击返回开头(´▽ƪʃ♡)↑↑"},{"title":"react笔记","date":"2021-05-18T16:00:00.000Z","url":"/2021/05/19/react%E7%AC%94%E8%AE%B0/","tags":[["学习笔记","/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"],["react","/tags/react/"]],"categories":[["学习笔记","/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"]],"content":"day011. 项目开发准备 2. 启动项目开发 3. git管理项目 4. 创建项目的基本结构 5 引入antd 6. 引入路由 7. Login的静态组件 8. 收集表单数据和表单的前台验证 9. 高阶函数与高阶组件 day021. 后台应用 2. 编写ajax代码 3. 实现登陆(包含自动登陆) 4. 搭建admin的整体界面结构 5. LeftNav组件 day031. Header组件 2. jsonp解决ajax跨域的原理 day04: Category组件1. 使用antd组件构建分类列表界面 2. 相关接口请求函数 3. 异步显示一级分类列表 4. 显示二级分类列表 5. 更新分类 day051. 添加分类 2. Product整体路由 3. 分页实现技术(2种) 4. ProductHome组件 5. ProductDetail组件 day061. ProductAddUpdate 2. PicturesWall day071. RichTextEditor 2. 完成商品添加与修改功能 3. 角色管理 day081. setState()的使用 2. setState()的异步与同步 3. Component与PureComponent 4. 用户管理 5. 导航菜单权限控制 day091. redux理解 2. redux相关API 3. redux核心概念(3个) 4. redux工作流程 5. 使用redux及相关库编码 day101. 在项目中搭建redux整套环境 2. 通过redux管理头部标题headTitle数据 3. 通过redux管理登陆用户信息user数据 4. 自定义redux库 5. 自定义react-redux库 day111. 数据可视化 2. 前台404界面 3. 打包应用运行"},{"title":"学习计划","date":"2021-03-06T16:00:00.000Z","url":"/2021/03/07/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/","tags":[["学习计划","/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"]],"categories":[["学习计划","/categories/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"]],"content":"学习计划一、移动端页面制作和响应式实现1.1 学习响应式开发相关知识点 viewport试口 移动端适配方案 移动端布局实际操作 媒介查询 移动端交互实现 1.2 响应式开发实战 可供参考练习的响应式网站：(可以根据屏幕尺寸更改css样式) 华为-构建万物互联的智能世界 Apple-官方网站 组件：Bootstrap 二、ajax技术 AJAX的作用 原生AJAX 同步与异步 http协议 AJAX的封装 jQuery的AJAX 缓存问题及解决方案 跨域请求及解决方案 前端模板引擎 相关学习视频： Web前端Ajax教程初学者零基础入门到精通全套完整版 相关参考教程： AJAX 教程 -W3school AJAX 教程 -菜鸟教程 三、微信小程序开发3.1 学习微信小程序开发的相关知识点 小程序组件 小程序API 小程序云函数 wepy小程序开发框架 mpvue小程序开发框架 相关学习视频: 零基础玩转微信小程序 微信小程序开发学习 3.2 微信小程序开发实战 音乐播放器 聊天室(在线聊天系统) 点餐系统 文件的上传与下载 天气预报查询 ……… 开发指南 : 微信小程序官方文档 现阶段参考的学习书籍： 《黑马程序员微信小程序开发实战》 四、vue框架开发4.1 学习vue框架开发的相关知识点 基于vue的ui组件库 边学边敲，以实践为主 "},{"title":"C语言生日快乐代码","date":"2020-10-29T16:00:00.000Z","url":"/2020/10/30/C%E8%AF%AD%E8%A8%80%E7%94%9F%E6%97%A5%E5%BF%AB%E4%B9%90%E4%BB%A3%E7%A0%81/","tags":[["学习分享","/tags/%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB/"],["c语言","/tags/c%E8%AF%AD%E8%A8%80/"]],"categories":[["学习笔记","/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"]],"content":"C语言生日快乐代码 若要观看效果，可自行在dev-c++运行 "},{"title":"markdown写博客","date":"2020-08-13T16:00:00.000Z","url":"/2020/08/14/markdown%E5%86%99%E5%8D%9A%E5%AE%A2/","tags":[["markdown","/tags/markdown/"],["文章格式","/tags/%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"]],"categories":[["关于博客","/categories/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/"]],"content":"第一部分 文章格式 layout:post 时特有的字段： 字段 含义 值类型 默认值 author 文章作者 [Object] config.author categories 分类 String, Array - tags 标签 String, Array - toc 是否生成目录 Bool true front-matter 字段 含义 值类型 默认值 layout 布局模版 String - title 页面标题 String - seo_title 网页标题 String page.title short_title 页面标题（在group列表中显示） String page.title date 创建时间 Date 文件创建时间 updated 更新日期 Date 文件修改时间 link 外部文章网址 String - music 内部音乐控件 [Object] - robots robots String - keywords 页面关键词 String - description 页面描述、摘要 String - cover 是否显示封面 Bool true top_meta 是否显示文章或页面顶部的meta信息 Bool true bottom_meta 是否显示文章或页面底部的meta信息 Bool true sidebar 页面侧边栏 Bool, Array theme.layout.*.sidebar body 页面主体元素 Array theme.layout.on_page.body mathjax 是否渲染公式 Bool, String false thumbnail 缩略图 String false icons 图标 Array [] pin 是否置顶 Bool false headimg 文章头图 url - music 字段 是否必须 值类型 server 是 netease, tencent, kugou, xiami, baidu type 是 song, playlist, album, search, artist id 是 song id &#x2F; playlist id &#x2F; album id &#x2F; search keyword 第二部分 在文章中插入音乐方法一2.1 安装插件在hexo文件夹中鼠标右击git bash here执行以下命令 2.2 插入音乐格式为： 举个例子： 注：存放音乐和图片的文件夹名称必须和文章名字一致；autoplay表示自动播放，若不需要可自行删除掉 2.3 给音乐加歌词2.3.1 方法1格式： {% \"歌手名字\" \"歌曲名字\" \"音乐地址\" \"音乐封面图片地址\" autoplay \"autoplay\" %} [00:00.00]lrc here {% endaplayerlrc %} 2.3.2 方法2格式： 举个例子： 注：lrc的txt文件必须更改成是由utf-8编码，否则网站上呈现出来的歌词会出现乱码 更改成由utf-8编码的方法: ①首先自行编写歌词，或者可以从QQ音乐下载歌曲的lrc文件，再把歌曲的lrc文件的后缀名改成txt，打开该txt文件你就会发现是由 ANSI 编码而来（如图）②把该txt文件另存为由utf-8编码（如图） 方法二格式： 注：XXXXX为音乐的id号 id号查找方法： 首先进入网易云在线平台，任意找到一首歌点进去播放，可以在地址栏拿到音乐id号 通过下面网址：， XXXXXX就是歌曲id号，每一首歌我们只需要换掉这个id号就行了,就相当于每一首的外链了 第三部分 在文章中插入图片3.1 安装插件在hexo文件夹中鼠标右击git bash here执行以下命令 3.2 插入图片格式为： 第四部分 在文章中插入视频4.1 安装插件在hexo文件夹中鼠标右击git bash here执行以下命令 4.2 插入视频格式： 举个例子： 其中key可以为：autoplay, loop, screenshot, hotkey, mutex, dmunlimited,logo,theme,url,pic,lang,autoplay, width,heigth 其实在我们平时插入视频不需要用到那么多的key必要的key有以下几个： url：视频的地址 pic：视频的封面图片地址 width:视频的宽度（单位为px） heigth：视频的高度（单位为px） 第五部分 字体的格式5.1 标题 5.2 文字样式加粗：**文字**样式：加粗 斜体：*文字*样式：斜体 下划线：&lt;u&gt;文字&lt;/u&gt;样式：下划线 删除线：~~文字~~样式：文字 代码块：文字样式：文字 引用：文字样式： 文字 5.3表格5.3.1 有序表格在文字前面加上1. 2. 3. 格式： 样式： 文本1 文本2 文本3 5.3.2 无序表格在文字前面加上 - 格式： 样式： 文本1 文本2 文本3 以上是个人搭建博客写文章时的总结 "},{"title":"绑定域名","date":"2020-08-12T16:00:00.000Z","url":"/2020/08/13/%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/","tags":[["绑定域名","/tags/%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"]],"categories":[["关于博客","/categories/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/"]],"content":"一、购买域名 域名可以在腾讯云，阿里云，GoDaddy上购买 以下以腾讯云为例： 1.注册一个腾讯云账号 2.购买域名 3.进行实名认证 二、域名解析1.进入 域名注册-我的域名 2.点击解析 3.添加记录①主机记录为:@ 记录类型为:CNAME 记录值为:你自己的博客地址(例如我的为 zztqsh.github.io)②主机记录为:www 记录类型为:CNAME 记录值为:你自己的博客地址(例如我的为 zztqsh.github.io) 10分钟后，你就可以用域名来访问你的博客了！"},{"title":"对“主席”的一些话","date":"2020-03-10T16:00:00.000Z","url":"/2020/03/11/%E4%B8%80%E4%BA%9B%E8%AF%9D/","tags":[["个人感想","/tags/%E4%B8%AA%E4%BA%BA%E6%84%9F%E6%83%B3/"]],"categories":[["个人感想","/categories/%E4%B8%AA%E4%BA%BA%E6%84%9F%E6%83%B3/"]],"content":"📢 对“主席”的一些话 👇👇👇有一些话，我想来想去觉得还是有必要说出来：😐😐😐 我进这个基地 其实先前有点害怕 😭😭😭 因为不懂如何选座位而不敢进基地，怕乱坐位置触犯了规则，但鼓起勇气向你求助之后，你的回答也让我感觉其实这个基地很随和，并没我想得那么严肃和苛刻😄但由于基地中大部分都是男生，也让我不懂得该如何主动向他们请教😳，也怕会冒犯到，所以自己学自己的，除了少梅姐之外，也只有你会主动问我学得怎么样了，也会帮我解决我存在的一些问题，也许是因为出于好心，也许是你即将成为主席，想要通过自己的努力更好带领大家，无论怎么样都谢谢你🙏🙏🙏 没有谁生来就拥有一切懂得所有，在你达到你现在的水平之前，你也是从零开始，你通过自身努力不断提升自己才变得现在的水平，而我也一样，我才刚开始，也许和现在的你比起来我什么都不是😣，可我并不是在原地踏步🏃🏃🏃，只是走得慢但也不会退后，而你也会指出我学习中的问题🐮，就像之前你指出我只懂得抄进去却不懂得理解它，也会帮我找一些学习视频告诉我学习方法，如果你不说出来，我也许会走更多的弯路 可你在指导的同时，总是会说“我的天！…….”🙉🙉🙉 可能是那些很基础的东西我都不懂得令你很惊讶，而你也总会带着一骨傲气，就像在说“这点都不懂，垃圾”，就像在看不起我一样，也许这些东西对你而言非常熟悉，可对于我而言还很陌生，我也在不断去学习去吸收，之前跟我说过关于“自恋”的问题，可我并不觉得有什么，每个人都会有一点自我欣赏，这反倒是好事，至少会对自己有信心，而并非高傲自大，也不是觉得自己很了不起就可以凌驾于别人身上，我相信你也不会这样，你也有自己的野心和欲望，懂得自己想要什么也会因此付出努力，相信你会成功的 希望即将成为主席的你，能够更加正视自己，也不必太在意过去的自己，坦然面对，不迷失自己😁😁😁 也希望基地在你的带领之下能够越来越好，你也会走向顶峰，当然到达了顶峰也不要回头看看我们这些还在半山腰的小兄弟👬小姐妹们👭 ㊗️㊗️㊗️㊗️㊗️ 祝你早日实现你的梦想祝你早点种出你的”爱情树”🙊 最后祝你成功！💪💪💪 ㊗️㊗️㊗️㊗️㊗️ 🚀主席的博客🚀"}]